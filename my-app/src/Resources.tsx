import React from 'react';
import { Card, List, ListItem, ListItemText, ListItemIcon, Grid, Box, Typography } from '@material-ui/core';

export const Resources = () => {


    return (
        <div>
            {/* <h1>Additional Resources</h1> */}
            <Grid container>
                <Grid item xs={12} sm={2}>
                    {/* <Card> */}
                    <Box m={1}>
                        <List component="nav">
                            <Typography variant="button" display="block" gutterBottom>
                                <ListItem button>
                                    Introduction to deepfakes
                                </ListItem>
                            </Typography>
                            <Typography variant="button" display="block" gutterBottom>
                                <ListItem button>
                                    Potential threats
                                </ListItem>
                            </Typography>
                            <Typography variant="button" display="block" gutterBottom>
                                <ListItem button>
                                    Related Incidents
                                </ListItem>
                            </Typography>
                            <Typography variant="button" display="block" gutterBottom>
                                <ListItem button>
                                    External links
                                </ListItem>
                            </Typography>
                        </List>
                    </Box>
                    {/* </Card> */}
                </Grid>
                <Grid item xs={12} sm={10}>
                    <Card>
                        <Box m={4}>
                            <h1>Introduction to deepfakes</h1>
                            <p>Image forgery usually refers to the manipulation of a digital image to conceal some meaningful or useful information about the image [1]. Recently, deep learning-based techniques have been utilized in the image forgery field to create fake photos or videos that are sometimes called ‘Deepfakes’ [2]. The term entered public consciousness in 2017 after semi-realistic pornographic clips ‘featuring’ celebrities generated by Deepfake technology were spread through a Reddit forum. These generation methods usually take into account multiple facial or posture artifacts and the use of deep convolutional networks to create realistic images or videos for human observers. With technology advancement, better neural network structure and techniques have been utilized to create Deepfakes of high quality.</p>
                            <p>Although training a high performing Deepfake generator from scratch would require a lot of hard work, using a trained generator to create new artificial content is rather simple. There exists online software available for ordinary people to create Deepfakes on their own without knowledge about artificial intelligence or deep learning. This has led to more incidents of the technology being used maliciously against various public figures. For example, in the year following the above-stated celebrity Deepfake incident, a video ‘showing’ the former US president Barack Obama cursing and calling President Donald Trump names emerged. Despite the unlikelihood of the video being true due to notable visual inconsistency, it is believed that such incidents and maliciously produced 'news' has hurt public trust. It is critical to protect the identities of these entities from malicious acts that potentially lead to embarrassment or even irreversible geopolitical conflicts [3]. However, with their natural exposure to much publicity due to their positions, there is usually lots of data available to train and deploy similar lip-syncing or face-swapping attacks. Additional research also indicates the possibility of creating seemingly realistic Deepfakes with only limited training data, perhaps just a few photos of the target. Thus, increasingly mature Deepfake technology has made it more and more difficult to detect Deepfakes. This has eroded the trust of the public in the authenticity of digitally recorded materials, since Deepfakes can potentially lead less-informed individuals to believe the false information conveyed in manipulated clips.</p>
                            <p>The prevalence and easy accessibility of Deepfakes not only facilitates the spreading of misinformation but also poses unique challenges to multiple applications that require the data authenticity that the digital medium provides, especially in the field of computer vision and face recognition. Face-swapping Deepfakes have made identity theft, i.e. deliberately using another person’s identity for potential misconduct, much easier [4]. On the other hand, there are also applications where Deepfake technology comes in handy for the benign purpose. One obvious application is the automatic after-processing of photos, helping resource-limited firms to organize more impactful marketing campaigns. It is also currently used for making some online training materials, which turn out to be helpful in the current situation of COVID 19, where a lot of video shoots have been called off [5]. Some people also suggest that the development of Deepfake-related artificial intelligence technology could benefit the healthcare industry by auto-detecting illness symptoms. Thus, it is important to consider both malignant and benign applications when it comes to understanding the technology itself.</p>
                            <p>To mitigate the negative impact of Deepfakes being used in malicious acts, large technology companies, including Google, Facebook, and Microsoft, have dedicated efforts to support and provide initiative for the development and accessibility of more accurate and reliable Deepfake-detection mechanisms. Google, in cooperation with renowned research universities, has published large-scale datasets for visual Deepfakes, which helps in future Deepfake detection efforts and benchmarking [6]. Facebook and Microsoft jointly held a ‘Deepfake Detection Challenge’, hoping to encourage the development of and improvement upon existing detection algorithms [7]. The result might seem insignificant, but still denotes an important step forward in coping with this constantly evolving technology and the potential impact it could have in the above-mentioned application fields. Recent research has also featured more carefully designed networks for Deepfake detection. Take two recent submissions in 2020 as examples. One makes use of a neural network to determine different facial parts, and it has a separate detector for any perturbation in each of the identified facial areas [2]. The other aims to detect inconsistencies in the pixel-level perturbation made by the generator and study these convolutional traces that could lead to more confident predictions [8]. Promising progress has been made with multiple Deepfake datasets and benchmarks.
 There are a few common types of deepfakes:</p>
                            <h3>
                                Replacement Deepfake
                    </h3>
                            <p>
                                A reenactment Deepfake uses a source image or video to drive the expression, posture, or movements of the target person in the output video or image. Lip syncing and head puppetry are two classic examples of this type of Deepfake generation approach, where the target head or lips are controlled in a way that mimics the source’s facial expression and gestures. In this kind of Deepfake approach, the target person’s identity is effectively stolen, leading to potential exploitation, like impersonation, or negatively affecting public opinions of the target person. The incident of the former US president Barack Obama mentioned above is an actual attack employed. MyVoiceYourFace [9] is a website that allows people with zero knowledge about deep learning to generate reenactment Deepfakes with only a source picture and a target video as input.
                    </p>
                        </Box>
                    </Card>
                </Grid>
            </Grid>
        </div>

    );
}
